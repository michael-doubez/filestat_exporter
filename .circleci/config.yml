# Golang CircleCI 2.1 configuration file
version: 2.1

executors:
  golang:
    docker:
      - image: cimg/go:1.22.9

jobs:
  check:
    executor: golang
    steps:
      - checkout
      - run: |
          GO_VERSION=`go version | sed -n '/go version/s/.* go\([^ ]\+\) .*/\1/p'`
          GOMOD_VERSION=`make go-version`
          if [ "${GO_VERSION}" == "${GOMOD_VERSION}" ] ; then
            echo >&2 "Go version is expected version: ${GO_VERSION}"
          else
            echo >&2 "Error: go version is ${GO_VERSION} but expected version is ${GO_VERSION}"
            # sed -i '/image: cimg\/go: /s/go:.*/go: '${GOMOD_VERSION}'/' ./.circleci/config.yml
            # git commit -a -m "[circleci] update go version to ${GOMOD_VERSION}"
            # git push
            exit 1
          fi
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: make check
  build:
    executor: golang
    steps:
      - checkout
      - run: make build
  dist:
    executor: golang
    steps:
      - checkout
      - run: make dist RELEASE_MODE=1
      - run: make version > dist/VERSION
      - persist_to_workspace:
          root: ./dist
          paths:
            - filestat_exporter-*.tar.gz
            - VERSION
  publish:
    executor: golang
    steps:
      - attach_workspace:
          at: ./dist
      - run:
          name: "Generate SHA256 Checksum"
          command: |
            cd dist
            sha256sum -b filestat_exporter-*.tar.gz > sha256sums.txt
      - run:
          name: "Publish on GitHub"
          command: |
            go install github.com/tcnksm/ghr@latest
            VERSION=$(cat dist/VERSION)
            rm dist/VERSION
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./dist/

workflows:
  version: 2
  continuous:
    jobs:
      - check
      - build
  delivery:
    jobs:
      - check:
          filters:
            tags:
              only: /.*/
      - dist:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - check
            - dist
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

